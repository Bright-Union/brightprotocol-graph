// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class InsuraceDistributor extends ethereum.SmartContract {
  static bind(address: Address): InsuraceDistributor {
    return new InsuraceDistributor("InsuraceDistributor", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
  coverData(): Address {
    let result = super.call("coverData", "coverData():(address)", []);

    return result[0].toAddress();
  }

  try_coverData(): ethereum.CallResult<Address> {
    let result = super.tryCall("coverData", "coverData():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllowance(owner: Address, currency: Address): BigInt {
    let result = super.call(
      "getAllowance",
      "getAllowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(currency)]
    );

    return result[0].toBigInt();
  }

  try_getAllowance(
    owner: Address,
    currency: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAllowance",
      "getAllowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCover(
    _owner: Address,
    _coverId: BigInt,
    _interfaceCompliant: boolean,
    _loopLimit: BigInt
  ): InsuraceDistributor__getCoverResultCoverStruct {
    let result = super.call(
      "getCover",
      "getCover(address,uint256,bool,uint256):((bytes32,uint256,bytes32,uint256,uint256,address,address,uint256,uint256,address))",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_coverId),
        ethereum.Value.fromBoolean(_interfaceCompliant),
        ethereum.Value.fromUnsignedBigInt(_loopLimit)
      ]
    );

    return changetype<InsuraceDistributor__getCoverResultCoverStruct>(
      result[0].toTuple()
    );
  }

  try_getCover(
    _owner: Address,
    _coverId: BigInt,
    _interfaceCompliant: boolean,
    _loopLimit: BigInt
  ): ethereum.CallResult<InsuraceDistributor__getCoverResultCoverStruct> {
    let result = super.tryCall(
      "getCover",
      "getCover(address,uint256,bool,uint256):((bytes32,uint256,bytes32,uint256,uint256,address,address,uint256,uint256,address))",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromUnsignedBigInt(_coverId),
        ethereum.Value.fromBoolean(_interfaceCompliant),
        ethereum.Value.fromUnsignedBigInt(_loopLimit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<InsuraceDistributor__getCoverResultCoverStruct>(
        value[0].toTuple()
      )
    );
  }

  getCoverCount(_owner: Address, _isActive: boolean): BigInt {
    let result = super.call(
      "getCoverCount",
      "getCoverCount(address,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromBoolean(_isActive)
      ]
    );

    return result[0].toBigInt();
  }

  try_getCoverCount(
    _owner: Address,
    _isActive: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCoverCount",
      "getCoverCount(address,bool):(uint256)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromBoolean(_isActive)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getQuote(
    _sumAssured: BigInt,
    _coverPeriod: BigInt,
    _contractAddress: Address,
    _coverAsset: Address,
    _nexusCoverable: Address,
    _data: Bytes
  ): InsuraceDistributor__getQuoteResultValue0Struct {
    let result = super.call(
      "getQuote",
      "getQuote(uint256,uint256,address,address,address,bytes):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_sumAssured),
        ethereum.Value.fromUnsignedBigInt(_coverPeriod),
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromAddress(_coverAsset),
        ethereum.Value.fromAddress(_nexusCoverable),
        ethereum.Value.fromBytes(_data)
      ]
    );

    return changetype<InsuraceDistributor__getQuoteResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getQuote(
    _sumAssured: BigInt,
    _coverPeriod: BigInt,
    _contractAddress: Address,
    _coverAsset: Address,
    _nexusCoverable: Address,
    _data: Bytes
  ): ethereum.CallResult<InsuraceDistributor__getQuoteResultValue0Struct> {
    let result = super.tryCall(
      "getQuote",
      "getQuote(uint256,uint256,address,address,address,bytes):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_sumAssured),
        ethereum.Value.fromUnsignedBigInt(_coverPeriod),
        ethereum.Value.fromAddress(_contractAddress),
        ethereum.Value.fromAddress(_coverAsset),
        ethereum.Value.fromAddress(_nexusCoverable),
        ethereum.Value.fromBytes(_data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<InsuraceDistributor__getQuoteResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  masterCover(): Address {
    let result = super.call("masterCover", "masterCover():(address)", []);

    return result[0].toAddress();
  }

  try_masterCover(): ethereum.CallResult<Address> {
    let result = super.tryCall("masterCover", "masterCover():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  product(): Address {
    let result = super.call("product", "product():(address)", []);

    return result[0].toAddress();
  }

  try_product(): ethereum.CallResult<Address> {
    let result = super.tryCall("product", "product():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _logic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get admin_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AdminCall extends ethereum.Call {
  get inputs(): AdminCall__Inputs {
    return new AdminCall__Inputs(this);
  }

  get outputs(): AdminCall__Outputs {
    return new AdminCall__Outputs(this);
  }
}

export class AdminCall__Inputs {
  _call: AdminCall;

  constructor(call: AdminCall) {
    this._call = call;
  }
}

export class AdminCall__Outputs {
  _call: AdminCall;

  constructor(call: AdminCall) {
    this._call = call;
  }

  get admin_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ChangeAdminCall extends ethereum.Call {
  get inputs(): ChangeAdminCall__Inputs {
    return new ChangeAdminCall__Inputs(this);
  }

  get outputs(): ChangeAdminCall__Outputs {
    return new ChangeAdminCall__Outputs(this);
  }
}

export class ChangeAdminCall__Inputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }

  get newAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeAdminCall__Outputs {
  _call: ChangeAdminCall;

  constructor(call: ChangeAdminCall) {
    this._call = call;
  }
}

export class ImplementationCall extends ethereum.Call {
  get inputs(): ImplementationCall__Inputs {
    return new ImplementationCall__Inputs(this);
  }

  get outputs(): ImplementationCall__Outputs {
    return new ImplementationCall__Outputs(this);
  }
}

export class ImplementationCall__Inputs {
  _call: ImplementationCall;

  constructor(call: ImplementationCall) {
    this._call = call;
  }
}

export class ImplementationCall__Outputs {
  _call: ImplementationCall;

  constructor(call: ImplementationCall) {
    this._call = call;
  }

  get implementation_(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class BuyCoverEvent extends ethereum.Event {
  get params(): BuyCoverEvent__Params {
    return new BuyCoverEvent__Params(this);
  }
}

export class BuyCoverEvent__Params {
  _event: BuyCoverEvent;

  constructor(event: BuyCoverEvent) {
    this._event = event;
  }

  get _productAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _productId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _period(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _asset(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class InsuraceDistributor__getCoverResultCoverStruct extends ethereum.Tuple {
  get coverType(): Bytes {
    return this[0].toBytes();
  }

  get productId(): BigInt {
    return this[1].toBigInt();
  }

  get contractName(): Bytes {
    return this[2].toBytes();
  }

  get coverAmount(): BigInt {
    return this[3].toBigInt();
  }

  get premium(): BigInt {
    return this[4].toBigInt();
  }

  get currency(): Address {
    return this[5].toAddress();
  }

  get contractAddress(): Address {
    return this[6].toAddress();
  }

  get expiration(): BigInt {
    return this[7].toBigInt();
  }

  get status(): BigInt {
    return this[8].toBigInt();
  }

  get refAddress(): Address {
    return this[9].toAddress();
  }
}

export class InsuraceDistributor__getQuoteResultValue0Struct extends ethereum.Tuple {
  get prop1(): BigInt {
    return this[0].toBigInt();
  }

  get prop2(): BigInt {
    return this[1].toBigInt();
  }

  get prop3(): BigInt {
    return this[2].toBigInt();
  }

  get prop4(): BigInt {
    return this[3].toBigInt();
  }

  get prop5(): BigInt {
    return this[4].toBigInt();
  }

  get prop6(): BigInt {
    return this[5].toBigInt();
  }

  get prop7(): BigInt {
    return this[6].toBigInt();
  }
}








export class __InsuraceDistributor_initCall extends ethereum.Call {
  get inputs(): __InsuraceDistributor_initCall__Inputs {
    return new __InsuraceDistributor_initCall__Inputs(this);
  }

  get outputs(): __InsuraceDistributor_initCall__Outputs {
    return new __InsuraceDistributor_initCall__Outputs(this);
  }
}

export class __InsuraceDistributor_initCall__Inputs {
  _call: __InsuraceDistributor_initCall;

  constructor(call: __InsuraceDistributor_initCall) {
    this._call = call;
  }

  get _masterCover(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class __InsuraceDistributor_initCall__Outputs {
  _call: __InsuraceDistributor_initCall;

  constructor(call: __InsuraceDistributor_initCall) {
    this._call = call;
  }
}

export class BuyCoverCall extends ethereum.Call {
  get inputs(): BuyCoverCall__Inputs {
    return new BuyCoverCall__Inputs(this);
  }

  get outputs(): BuyCoverCall__Outputs {
    return new BuyCoverCall__Outputs(this);
  }
}

export class BuyCoverCall__Inputs {
  _call: BuyCoverCall;

  constructor(call: BuyCoverCall) {
    this._call = call;
  }

  get contractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get coverAsset(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get sumAssured(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get coverPeriod(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get coverType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get maxPriceWithFee(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class BuyCoverCall__Outputs {
  _call: BuyCoverCall;

  constructor(call: BuyCoverCall) {
    this._call = call;
  }
}

export class BuyCoverInsuraceCall extends ethereum.Call {
  get inputs(): BuyCoverInsuraceCall__Inputs {
    return new BuyCoverInsuraceCall__Inputs(this);
  }

  get outputs(): BuyCoverInsuraceCall__Outputs {
    return new BuyCoverInsuraceCall__Outputs(this);
  }
}

export class BuyCoverInsuraceCall__Inputs {
  _call: BuyCoverInsuraceCall;

  constructor(call: BuyCoverInsuraceCall) {
    this._call = call;
  }

  get quote(): BuyCoverInsuraceCallQuoteStruct {
    return changetype<BuyCoverInsuraceCallQuoteStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class BuyCoverInsuraceCall__Outputs {
  _call: BuyCoverInsuraceCall;

  constructor(call: BuyCoverInsuraceCall) {
    this._call = call;
  }
}

export class BuyCoverInsuraceCallQuoteStruct extends ethereum.Tuple {
  get products(): Array<i32> {
    return this[0].toI32Array();
  }

  get durationInDays(): Array<i32> {
    return this[1].toI32Array();
  }

  get amounts(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get currency(): Address {
    return this[3].toAddress();
  }

  get premium(): BigInt {
    return this[4].toBigInt();
  }

  get owner(): Address {
    return this[5].toAddress();
  }

  get refCode(): BigInt {
    return this[6].toBigInt();
  }

  get helperParameters(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get securityParameters(): Array<BigInt> {
    return this[8].toBigIntArray();
  }

  get v(): Array<i32> {
    return this[9].toI32Array();
  }

  get r(): Array<Bytes> {
    return this[10].toBytesArray();
  }

  get s(): Array<Bytes> {
    return this[11].toBytesArray();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
